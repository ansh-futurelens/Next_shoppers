{
  "openapi": "3.0.0",
  "info": {
    "title": "E-commerce API's",
    "version": "1.0"
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    { "name": "Authentication" },
    { "name": "User" },
    { "name": "Category" }
  ],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Authenticate user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized: Invalid credentials"
          },
          "404": {
            "description": "Not Found: User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "summary": "Register new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "User's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "User's last name"
                  }
                },
                "required": ["email", "password", "first_name", "last_name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad Request: User already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/auth/verify-email": {
      "post": {
        "summary": "Verify Email",
        "tags": ["Authentication"],
        "description": "Verify email address using the provided token",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "JWT token for email verification",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successful",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Email verification successful"
                }
              }
            }
          },
          "400": {
            "description": "Token invalid",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 400,
                  "message": "Token invalid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "Initiate password reset process by sending a reset link to the user's email address",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address of the user"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Password reset email sent successfully"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "message": "User not found"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 400,
                  "message": "Bad request: Invalid email format"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "summary": "Reset Password",
        "description": "Reset user password using a valid reset token",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Reset token received by the user via email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "description": "New password to set for the user account"
                  }
                },
                "required": ["newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Password reset successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or Invalid token",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 400,
                  "message": "Bad request: Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "summary": "Change Password",
        "description": "Change user password after authentication",
        "tags": ["Authentication"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "description": "Current password of the user"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "New password to set for the user account"
                  }
                },
                "required": ["oldPassword", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Password changed successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or Invalid password",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 400,
                  "message": "Bad request: Invalid password"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "message": "Unauthorized: Invalid credentials"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/user/profile": {
      "get": {
        "summary": "Get User Profile",
        "description": "Get the profile information of the authenticated user",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "User profile retrieved successfully",
                  "data": {
                    "email": "example@example.com",
                    "firstName": "John",
                    "lastName": "Doe",
                    "profilePictureUrl": "https://example.com/profile.jpg",
                    "address": {
                      "street": "123 Street",
                      "city": "City",
                      "state": "State",
                      "country": "Country",
                      "zipCode": "12345"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "message": "Unauthorized: Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Profile",
        "description": "Update the profile information of the authenticated user",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "description": "The first name of the user"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The last name of the user"
                  }
                },
                "required": ["first_name", "last_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "User profile updated successfully",
                  "data": {
                    "email": "example@example.com",
                    "firstName": "John",
                    "lastName": "Doe",
                    "profilePictureUrl": "https://example.com/profile.jpg",
                    "address": {
                      "street": "123 Street",
                      "city": "City",
                      "state": "State",
                      "country": "Country",
                      "zipCode": "12345"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "message": "Unauthorized: Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "summary": "Get User Information",
        "description": "Retrieve the information of the authenticated user",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Successfully found.",
                  "success": true,
                  "data": [
                    {
                      "email": "ansh@yopmail.com",
                      "first_name": "aaaaa",
                      "last_name": "aaa",
                      "order_history": [],
                      "wish_list": [],
                      "recently_viewed_products": [],
                      "favorite_products": [],
                      "product_reviews": [],
                      "is_email_verified": true,
                      "created_at": "2024-04-22T10:56:47.542Z",
                      "is_deleted": false,
                      "deleted_at": "2024-04-22T11:22:45.934Z",
                      "deleted_by": "6626426fa1b9f90bbc176da2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "message": "Unauthorized: Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{userId}": {
      "get": {
        "summary": "Get User Information by ID",
        "description": "Retrieve the information of the user with the specified ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Successfully found.",
                  "success": true,
                  "data": {
                    "email": "ansh@yopmail.com",
                    "first_name": "aaaaa",
                    "last_name": "aaa",
                    "order_history": [],
                    "wish_list": [],
                    "recently_viewed_products": [],
                    "favorite_products": [],
                    "product_reviews": [],
                    "is_email_verified": true,
                    "created_at": "2024-04-22T10:56:47.542Z",
                    "is_deleted": false,
                    "deleted_at": "2024-04-22T11:22:45.934Z",
                    "deleted_by": "6626426fa1b9f90bbc176da2"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "message": "Unauthorized: Invalid token"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 404,
                  "message": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/category": {
      "get": {
        "summary": "Get All Categories",
        "tags": ["Category"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Successfully found.",
                  "success": true,
                  "data": [
                    {
                      "_id": "66221a39257f52459ea28bf8",
                      "name": "Category Name",
                      "icon_image_url": "https://example.com/icon.png",
                      "description": "Description of the category",
                      "created_at": "2024-04-19T07:16:09.601Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Category",
        "tags": ["Category"],
        "description": "Creates a new category with the provided data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Category Name"
                  },
                  "description": {
                    "type": "string",
                    "example": "Description of the category"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 201,
                  "message": "Successfully created.",
                  "success": true,
                  "data": {
                    "name": "Category Name",
                    "description": "Description of the category",
                    "_id": "662262fa0f82b424f301b8e2",
                    "created_at": "2024-04-19T12:26:34.881Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/category/{id}": {
      "get": {
        "summary": "Get Category Details By Id",
        "tags": ["Category"],
        "description": "Retrieves category details by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found.",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Successfully found.",
                  "success": true,
                  "data": {
                    "_id": "66221af4257f52459ea28bfc",
                    "name": "Category Name 2",
                    "icon_image_url": "https://example.com/icon.png",
                    "description": "Description of the category",
                    "created_at": "2024-04-19T07:19:16.418Z",
                    "updated_at": "2024-04-19T09:09:04.738Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Category By Id",
        "tags": ["Category"],
        "description": "Updates a category by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the category"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Updated name of the category"
                  }
                },
                "example": {
                  "name": "Updated Category Name"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated.",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Successfully updated.",
                  "success": true,
                  "data": {
                    "_id": "66221af4257f52459ea28bfc",
                    "name": "Category Name 2",
                    "icon_image_url": "https://example.com/icon.png",
                    "description": "Description of the category",
                    "created_at": "2024-04-19T07:19:16.418Z",
                    "updated_at": "2024-04-19T11:33:57.256Z",
                    "image_url": "https://res.cloudinary.com/dhkr4c91r/image/upload/v1713526367/apmaboxw49u6mjqgy43c.jpg"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove Category By Id",
        "tags": ["Category"],
        "description": "Remove a category by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the category"
          }
        ],

        "responses": {
          "200": {
            "description": "Successfully updated.",
            "content": {
              "application/json": {
                "example": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/category/{categoryId}/upload-image": {
      "post": {
        "summary": "Upload Image to Category",
        "tags": ["Category"],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the category to upload image to"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image uploaded successfully",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "message": "Image uploaded successfully",
                  "success": true,
                  "data": {
                    "_id": "66221a39257f52459ea28bf8",
                    "name": "Category Name",
                    "icon_image_url": "https://example.com/icon.png",
                    "description": "Description of the category",
                    "image_url": "https://example.com/category_image.png",
                    "created_at": "2024-04-19T07:16:09.601Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 400,
                  "message": "Bad request",
                  "success": false
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 500,
                  "message": "Internal server error",
                  "success": false
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {}
}
